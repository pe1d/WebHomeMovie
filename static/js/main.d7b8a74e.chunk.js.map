{"version":3,"sources":["store/actions/actionTypes.js","store/reducers/appReducer.js","store/reducers/userReducer.js","store/reducers/adminReducer.js","store/reducers/movieRuducer.js","store/reducers/rootReducer.js","redux.js","untils/constant.js","untils/LanguageUtils.js","hoc/authentication.js","store/actions/appActions.js","store/actions/userActions.js","services/movieService.js","store/actions/movieActions.js","containers/HomePage/HomeFooter.js","containers/Auth/Login.js","containers/HomePage/Home.js","components/About/DetailAbout.js","containers/Auth/About.js","containers/mainWatch/SideWatch/Header/HeaderSW.js","containers/Auth/Header/HeaderMoviePage.js","containers/Movie/dMoviePage.js","containers/Movie/watchMoviePage.js","containers/mainWatch/SideInfo/Menu/Menu.js","containers/mainWatch/SideInfo/Menu/SubMenu.js","containers/mainWatch/SideInfo/SideInfo.js","components/contentSlider.js","containers/mainWatch/ListMain/ListMain.js","containers/mainWatch/SideWatch/Body/cslCont.js","containers/mainWatch/SideWatch/Body/cslTopRated.js","containers/mainWatch/SideWatch/Body/cslGenres.js","containers/mainWatch/SideWatch/Body/bodySW.js","containers/mainWatch/SideWatch/SideWatch.js","containers/mainWatch/Main/Main.js","containers/App.js","serviceWorker.js","hoc/IntlProviderWrapper.js","index.js"],"names":["actionTypes","Object","freeze","APP_START_UP_COMPLETE","SET_CONTENT_OF_CONFIRM_MODAL","CHANGE_LANGUAGE","SET_SIDE","ADD_USER_SUCCESS","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","PROCESS_LOGOUT","FETCH_MOVIE_SUCCESS","FETCH_MOVIE_FAIL","FETCH_MOVIE_TOP_RATED_SUCCESS","FETCH_MOVIE_TOP_RATED_FAIL","FETCH_DETAIL_MOVIE_SUCCESS","FETCH_DETAIL_MOVIE_FAIL","FETCH_VIDEO_MOVIE_SUCCESS","FETCH_VIDEO_MOVIE_FAIL","FETCH_GENRES_MOVIE_SUCCESS","FETCH_GENRES_MOVIE_FAIL","FETCH_CREDIT_MOVIE_SUCCESS","FETCH_CREDIT_MOVIE_FAIL","initialState","started","language","side","systemMenuPath","contentOfConfirmModal","isOpen","messageId","handleFunc","dataFunc","appReducer","state","arguments","length","undefined","action","type","console","log","isLoggedIn","userInfo","adminReducer","movieList","movieListTopRated","detailsMovie","videoMovie","genresMovie","creditMovie","movieReducer","data","persistCommonConfig","storage","stateReconciler","autoMergeLevel2","userPersistConfig","key","whitelist","appPersistConfig","isDevelopment","environment","history","createBrowserHistory","basename","process","reduxStateSyncConfig","rootReducer","combineReducers","router","connectRouter","user","persistReducer","userReducer","app","admin","movie","middleware","routerMiddleware","thunkMiddleware","createStateSyncMiddleware","composeEnhancers","compose","reduxStore","createStore","applyMiddleware","persistor","dispatch","persistStore","path","LANGUAGES","ApiKey","flattenMessages","nestedMessages","prefix","keys","reduce","messages","value","prefixedKey","concat","assign","messages_vi","messages_en","locationHelper","locationHelperBuilder","userIsAuthenticated","connectedRouterRedirect","authenticatedSelector","wrapperDisplayName","redirectPath","userIsNotAuthenticated","ownProps","getRedirectQueryParam","allowRedirectBack","changeLanguageApp","processLogout","getMoviesFromDB","typeSort","page","year","Promise","async","resolve","reject","fetch","require","url","options","method","headers","accept","Authorization","then","res","json","results","catch","err","e","fetchMovie","getState","fetchMovieSuccess","fetchMovieFail","fetchVideoMovie","id","getVideoMovieFromDB","fetchVideoMovieSuccess","fetchVideoMovieFail","fetchDetailMovie","getDetailMovieFromDB","error","fetchDetailMovieSuccess","fetchDetailMovieFail","fetchGenresMovie","getGenresMovie","fetchGenresMovieSuccess","fetchGenresMovieFail","fetchCreditMovie","getCreditMovie","fetchCreditMovieSuccess","fetchCreditMovieFail","connect","props","_jsx","_Fragment","children","_jsxs","className","FormattedMessage","target","href","userLoginSuccess","actions","setUser","useState","userName","password","errMessage","setErrMessage","handleLogin","response","this","setState","message","style","textAlign","placeholder","class","name","onChange","event","color","onClick","margin","HomeFooter","linkToRedirect","Redirect","to","srcImg","backgroundImage","changeLanguageAppRedux","inputEmail","setInputEmail","background","setBackground","useEffect","handleScroll","window","scrollY","addEventListener","removeEventListener","changeLanguage","push","DetailAbout","srcVid","noticeList","setNoticeList","title","date","status","modal","setModal","avatar","typeof","checkNewNoti","allNotice","filter","map","item","index","noti","newNotice","handleClickONnotice","Date","toLocaleString","handleDeleteNotice","stopPropagation","newNoti","withRouter","changeSide","width","height","HeaderSW","detailMovie","infoMovie","setInfoMovie","showModal","setShowModal","watchVid","setWatchVid","match","params","searchCredit","role","director","crew","find","department","handleCloseModal","release_date","timeHour","moment","startOf","add","runtime","format","timeMinute","rating","vote_average","HeaderMoviePage","backdrop_path","poster_path","original_title","getFullYear","hour","checkS","StarRatings","starDimension","starSpacing","starRatedColor","genres","origin_country","overview","Slider","speed","slidesToShow","slidesToScroll","infinite","initialSlide","responsive","breakpoint","settings","cast","profile_path","character","handleOpenModal","ReactModal","contentLabel","onRequestClose","shouldCloseOnOverlayClick","overlayClassName","YouTube","videoId","opts","playerVars","autoplay","getWindowDimensions","innerWidth","innerHeight","Player","vid","windowDimensions","setWindowDimensions","handleResize","ReactPlayer","controls","muted","setVid","trailer","rederTrailer","toLowerCase","includes","menu","setMenu","SubMenu","Menu","listMovie","setListMovie","favor","setFavor","fetchMovieList","idName","arrows","hanldeWatchMovie","autoplaySpeed","dots","ContentSlider","dataContMovie","setDataContMovie","nMovie","timeCont","tMovie","position","setPosition","left","time","start","end","TimeRangeSlider","disabled","maxValue","minValue","step","dataTopRatedMovie","setDataTopRatedMovie","top","slice","CslCont","CslTopRated","CslGenres","BodySW","header","setHeader","SideInfo","ListMain","SideWatch","Fragment","Router","Switch","Route","exact","component","Home","Login","Main","About","dMoviePage","watchMoviePage","ToastContainer","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","Boolean","location","hostname","getMessageByKey","lang","getFlattenedMessages","IntlProviderWrapper","Component","render","IntlProvider","locale","defaultLocale","ReactDOM","Provider","store","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d7b8a74e.chunk.js","sourcesContent":["const actionTypes = Object.freeze({\r\n    //app\r\n    APP_START_UP_COMPLETE: 'APP_START_UP_COMPLETE',\r\n    SET_CONTENT_OF_CONFIRM_MODAL: 'SET_CONTENT_OF_CONFIRM_MODAL',\r\n    CHANGE_LANGUAGE: \"CHANGE_LANGUAGE\",\r\n    SET_SIDE: \"SET_SIDE\",\r\n    //user\r\n    ADD_USER_SUCCESS: 'ADD_USER_SUCCESS',\r\n    USER_LOGIN_SUCCESS: 'USER_LOGIN_SUCCESS',\r\n    USER_LOGIN_FAIL: 'USER_LOGIN_FAIL',\r\n    PROCESS_LOGOUT: 'PROCESS_LOGOUT',\r\n\r\n    //Movies\r\n    FETCH_MOVIE_SUCCESS: 'FETCH_MOVIE_SUCCESS',\r\n    FETCH_MOVIE_FAIL: 'FETCH_MOVIE_FAIL',\r\n\r\n    FETCH_MOVIE_TOP_RATED_SUCCESS: 'FETCH_MOVIE_TOP_RATED_SUCCESS',\r\n    FETCH_MOVIE_TOP_RATED_FAIL: 'FETCH_MOVIE_TOP_RATED_FAIL',\r\n\r\n    FETCH_DETAIL_MOVIE_SUCCESS: 'FETCH_DETAIL_MOVIE_SUCCESS',\r\n    FETCH_DETAIL_MOVIE_FAIL: 'FETCH_DETAIL_MOVIE_FAIL',\r\n\r\n    FETCH_VIDEO_MOVIE_SUCCESS: 'FETCH_VIDEO_MOVIE_SUCCESS',\r\n    FETCH_VIDEO_MOVIE_FAIL: 'FETCH_VIDEO_MOVIE_FAIL',\r\n\r\n    FETCH_GENRES_MOVIE_SUCCESS: 'FETCH_GENRES_MOVIE_SUCCESS',\r\n    FETCH_GENRES_MOVIE_FAIL: 'FETCH_GENRES_MOVIE_FAIL',\r\n\r\n    FETCH_CREDIT_MOVIE_SUCCESS: 'FETCH_CREDIT_MOVIE_SUCCESS',\r\n    FETCH_CREDIT_MOVIE_FAIL: 'FETCH_CREDIT_MOVIE_FAIL'\r\n\r\n})\r\n\r\nexport default actionTypes;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initContentOfConfirmModal = {\r\n    isOpen: false,\r\n    messageId: \"\",\r\n    handleFunc: null,\r\n    dataFunc: null\r\n}\r\n\r\nconst initialState = {\r\n    started: true,\r\n    language: 'vi',\r\n    side: false,\r\n    systemMenuPath: '/home/watch',\r\n    contentOfConfirmModal: {\r\n        ...initContentOfConfirmModal\r\n    }\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.APP_START_UP_COMPLETE:\r\n            return {\r\n                ...state,\r\n                started: true\r\n            }\r\n        case actionTypes.SET_CONTENT_OF_CONFIRM_MODAL:\r\n            return {\r\n                ...state,\r\n                contentOfConfirmModal: {\r\n                    ...state.contentOfConfirmModal,\r\n                    ...action.contentOfConfirmModal\r\n                }\r\n            }\r\n        case actionTypes.CHANGE_LANGUAGE:\r\n            // console.log(\">>>>Check redux: \", action)\r\n            return {\r\n                ...state,\r\n                language: action.language,\r\n            }\r\n        case actionTypes.SET_SIDE:\r\n            console.log(action.side);\r\n            return {\r\n                ...state,\r\n                side: action.side,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    userInfo: ''\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.USER_LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                userInfo: action.userInfo\r\n            }\r\n        case actionTypes.USER_LOGIN_FAIL:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                userInfo: null\r\n            }\r\n        case actionTypes.PROCESS_LOGOUT:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                userInfo: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\n\r\n\r\nconst initialState = {\r\n\r\n}\r\n\r\nconst adminReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default adminReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    movieList: [],\r\n    movieListTopRated: [],\r\n    detailsMovie: {},\r\n    videoMovie: [],\r\n    genresMovie: [],\r\n    creditMovie: []\r\n}\r\n\r\nconst movieReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_MOVIE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                movieList: action.data\r\n            }\r\n        case actionTypes.FETCH_MOVIE_FAIL:\r\n            return {\r\n                ...state,\r\n            }\r\n        case actionTypes.FETCH_MOVIE_TOP_RATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                movieListTopRated: action.data\r\n            }\r\n        case actionTypes.FETCH_MOVIE_TOP_RATED_FAIL:\r\n            return {\r\n                ...state,\r\n            }\r\n        case actionTypes.FETCH_DETAIL_MOVIE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                detailsMovie: action.data\r\n            }\r\n        case actionTypes.FETCH_DETAIL_MOVIE_FAIL:\r\n            return {\r\n                ...state,\r\n            }\r\n        case actionTypes.FETCH_VIDEO_MOVIE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                videoMovie: action.data\r\n            }\r\n        case actionTypes.FETCH_VIDEO_MOVIE_FAIL:\r\n            return {\r\n                ...state,\r\n            }\r\n        case actionTypes.FETCH_GENRES_MOVIE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                genresMovie: action.data\r\n            }\r\n        case actionTypes.FETCH_GENRES_MOVIE_FAIL:\r\n            return {\r\n                ...state,\r\n            }\r\n        case actionTypes.FETCH_CREDIT_MOVIE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                creditMovie: action.data\r\n            }\r\n        case actionTypes.FETCH_CREDIT_MOVIE_FAIL:\r\n            return {\r\n                ...state,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default movieReducer;","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\n\r\nimport appReducer from \"./appReducer\";\r\nimport userReducer from \"./userReducer\";\r\nimport adminReducer from \"./adminReducer\"\r\nimport movieReducer from './movieRuducer';\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { persistReducer } from 'redux-persist';\r\n\r\nconst persistCommonConfig = {\r\n    storage: storage,\r\n    stateReconciler: autoMergeLevel2,\r\n};\r\nconst userPersistConfig = {\r\n    ...persistCommonConfig,\r\n    key: 'user',\r\n    whitelist: ['isLoggedIn', 'userInfo']\r\n};\r\nconst appPersistConfig = {\r\n    ...persistCommonConfig,\r\n    key: 'app',\r\n    whitelist: ['language']\r\n};\r\n\r\nexport default (history) => combineReducers({\r\n    router: connectRouter(history),\r\n    user: persistReducer(userPersistConfig, userReducer),\r\n    app: persistReducer(appPersistConfig, appReducer),\r\n    admin: adminReducer,\r\n    movie: movieReducer\r\n})","import { logger } from \"redux-logger\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { createStateSyncMiddleware } from 'redux-state-sync';\r\nimport { persistStore } from 'redux-persist';\r\n\r\nimport createRootReducer from './store/reducers/rootReducer';\r\nimport actionTypes from './store/actions/actionTypes';\r\n\r\nconst environment = process.env.NODE_ENV || \"development\";\r\nlet isDevelopment = environment === \"development\";\r\n\r\n//hide redux logs\r\nisDevelopment = false;\r\n\r\n\r\nexport const history = createBrowserHistory({ basename: process.env.REACT_APP_ROUTER_BASE_NAME });\r\n\r\nconst reduxStateSyncConfig = {\r\n    whitelist: [\r\n        actionTypes.APP_START_UP_COMPLETE,\r\n        actionTypes.CHANGE_LANGUAGE\r\n    ]\r\n}\r\n\r\nconst rootReducer = createRootReducer(history);\r\nconst middleware = [\r\n    routerMiddleware(history),\r\n    thunkMiddleware,\r\n    createStateSyncMiddleware(reduxStateSyncConfig),\r\n]\r\nif (isDevelopment) middleware.push(logger);\r\n\r\nconst composeEnhancers = (isDevelopment && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\r\n\r\nconst reduxStore = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(...middleware)),\r\n)\r\n\r\nexport const dispatch = reduxStore.dispatch;\r\n\r\nexport const persistor = persistStore(reduxStore);\r\n\r\nexport default reduxStore;","export const path = {\r\n    HOME: '/',\r\n    HOMEPAGE: '/home',\r\n    ABOUT: \"/about\",\r\n    LOGIN: '/login',\r\n    LOG_OUT: '/logout',\r\n    SYSTEM: '/system',\r\n    DETAILMOVIE: '/dMovie/:id',\r\n    WATCH: '/wMovie/:id',\r\n};\r\n\r\nexport const LANGUAGES = {\r\n    VI: 'vi',\r\n    EN: 'en'\r\n};\r\n\r\nexport const User_Role = {\r\n    ADMIN: 'R1',\r\n    USER: 'R2',\r\n};\r\nexport const dateFormat = {\r\n    SEND_TO_SERVER: 'DD/MM/YYYY'\r\n};\r\n\r\nexport const YesNoObj = {\r\n    YES: 'Y',\r\n    NO: 'N'\r\n}\r\nexport const ApiKey = {\r\n    TokenAuth: 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2NGM3ODJmNjFhZWViZWFkNTJkOGNiMGZkMDI2YzBmNSIsInN1YiI6IjY2MTdmOWFkZTI5NWI0MDE3ZGFmYTI4NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.JVW04mo4eC1d8cXUUDD9C_24mRnpbFLUqg0HvViAZ6g'\r\n}","import messages_vi from '../translations/vi.json';\r\nimport messages_en from '../translations/en.json';\r\n\r\nconst flattenMessages = ((nestedMessages, prefix = '') => {\r\n    if (nestedMessages == null) {\r\n        return {}\r\n    }\r\n    return Object.keys(nestedMessages).reduce((messages, key) => {\r\n        const value = nestedMessages[key];\r\n        const prefixedKey = prefix ? `${prefix}.${key}` : key;\r\n\r\n        if (typeof value === 'string') {\r\n            Object.assign(messages, {[prefixedKey]: value})\r\n        } else {\r\n            Object.assign(messages, flattenMessages(value, prefixedKey))\r\n        }\r\n\r\n        return messages\r\n    }, {})\r\n});\r\n\r\nconst messages = {\r\n    'vi': flattenMessages(messages_vi),\r\n    'en': flattenMessages(messages_en),\r\n};\r\n\r\nexport default class LanguageUtils {\r\n    static getMessageByKey(key, lang) {\r\n        return messages[lang][key]\r\n    }\r\n\r\n    static getFlattenedMessages() {\r\n        return messages\r\n    }\r\n}","import locationHelperBuilder from \"redux-auth-wrapper/history4/locationHelper\";\r\nimport { connectedRouterRedirect } from \"redux-auth-wrapper/history4/redirect\";\r\n\r\nconst locationHelper = locationHelperBuilder({});\r\n\r\nexport const userIsAuthenticated = connectedRouterRedirect({\r\n    authenticatedSelector: state => state.user.isLoggedIn,\r\n    wrapperDisplayName: 'UserIsAuthenticated',\r\n    redirectPath: '/login'\r\n});\r\n\r\nexport const userIsNotAuthenticated = connectedRouterRedirect({\r\n    // Want to redirect the user when they are authenticated\r\n    authenticatedSelector: state => !state.user.isLoggedIn,\r\n    wrapperDisplayName: 'UserIsNotAuthenticated',\r\n    redirectPath: (state, ownProps) => locationHelper.getRedirectQueryParam(ownProps) || '/',\r\n    allowRedirectBack: false\r\n});","import actionTypes from './actionTypes';\r\n\r\nexport const appStartUpComplete = () => ({\r\n    type: actionTypes.APP_START_UP_COMPLETE\r\n});\r\n\r\nexport const setContentOfConfirmModal = (contentOfConfirmModal) => ({\r\n    type: actionTypes.SET_CONTENT_OF_CONFIRM_MODAL,\r\n    contentOfConfirmModal: contentOfConfirmModal\r\n});\r\n\r\nexport const changeLanguageApp = (language) => ({\r\n    type: actionTypes.CHANGE_LANGUAGE,\r\n    language: language,\r\n})\r\nexport const setSideInfo = (side) => ({\r\n    type: actionTypes.SET_SIDE,\r\n    side: side,\r\n})","import actionTypes from './actionTypes';\r\n\r\nexport const addUserSuccess = () => ({\r\n    type: actionTypes.ADD_USER_SUCCESS\r\n})\r\nexport const userLoginSuccess = (userInfo) => ({\r\n    type: actionTypes.USER_LOGIN_SUCCESS,\r\n    userInfo: userInfo\r\n})\r\nexport const userLoginFail = () => ({\r\n    type: actionTypes.USER_LOGIN_FAIL\r\n})\r\n\r\nexport const processLogout = () => ({\r\n    type: actionTypes.PROCESS_LOGOUT\r\n})","// import axios from \"../axios\"\r\nimport { ApiKey } from '../untils';\r\n//popularity.desc\r\nconst getMoviesFromDB = (typeSort, page, language, year) => {\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            const fetch = require('node-fetch');\r\n\r\n            const url = `https://api.themoviedb.org/3/discover/movie?include_adult=false&include_video=false\r\n            &language=${language}&page=${page}&sort_by=${typeSort}&vote_count.gte=1000&year=${year}`;\r\n            const options = {\r\n                method: 'GET',\r\n                headers: {\r\n                    accept: 'application/json',\r\n                    Authorization: `Bearer ${ApiKey.TokenAuth}`\r\n                }\r\n            };\r\n\r\n            return await fetch(url, options)\r\n                .then(res => res.json())\r\n                .then(json => resolve(json.results))\r\n                .catch(err => reject('error:' + err));\r\n        } catch (e) {\r\n            reject(e)\r\n        }\r\n    })\r\n}\r\nconst getDetailMovieFromDB = (id, language) => {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            const fetch = require('node-fetch');\r\n\r\n            const url = `https://api.themoviedb.org/3/movie/${id}?language=${language}`;\r\n            const options = {\r\n                method: 'GET',\r\n                headers: {\r\n                    accept: 'application/json',\r\n                    Authorization: `Bearer ${ApiKey.TokenAuth}`\r\n                }\r\n            };\r\n\r\n            fetch(url, options)\r\n                .then(res => res.json())\r\n                .then(json => resolve(json))\r\n                .catch(err => console.error('error:' + err));\r\n        } catch (e) {\r\n            reject(e)\r\n        }\r\n    })\r\n\r\n}\r\nconst getVideoMovieFromDB = (id, language) => {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            const fetch = require('node-fetch');\r\n\r\n            const url = `https://api.themoviedb.org/3/movie/${id}/videos?language=${language}`;\r\n            const options = {\r\n                method: 'GET',\r\n                headers: {\r\n                    accept: 'application/json',\r\n                    Authorization: `Bearer ${ApiKey.TokenAuth}`\r\n                }\r\n            };\r\n\r\n            fetch(url, options)\r\n                .then(res => res.json())\r\n                .then(json => resolve(json.results))\r\n                .catch(err => reject(err));\r\n        } catch (e) {\r\n            reject(e)\r\n        }\r\n    })\r\n}\r\nconst getGenresMovie = (language) => {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            const fetch = require('node-fetch');\r\n\r\n            const url = `https://api.themoviedb.org/3/genre/movie/list?language=${language}`;\r\n            const options = {\r\n                method: 'GET',\r\n                headers: {\r\n                    accept: 'application/json',\r\n                    Authorization: `Bearer ${ApiKey.TokenAuth}`\r\n                }\r\n            };\r\n\r\n            fetch(url, options)\r\n                .then(res => res.json())\r\n                .then(json => resolve(json))\r\n                .catch(err => console.error('error:' + err));\r\n        } catch (e) {\r\n            reject(e)\r\n        }\r\n    })\r\n}\r\nconst getCreditMovie = (id, language) => {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            const fetch = require('node-fetch');\r\n\r\n            const url = `https://api.themoviedb.org/3/movie/${id}/credits?language=${language}`;\r\n            const options = {\r\n                method: 'GET',\r\n                headers: {\r\n                    accept: 'application/json',\r\n                    Authorization: `Bearer ${ApiKey.TokenAuth}`\r\n                }\r\n            };\r\n\r\n            fetch(url, options)\r\n                .then(res => res.json())\r\n                .then(json => resolve(json))\r\n                .catch(err => console.error('error:' + err));\r\n        } catch (e) {\r\n            reject(e)\r\n        }\r\n    })\r\n\r\n}\r\nexport {\r\n    getMoviesFromDB, getDetailMovieFromDB,\r\n    getVideoMovieFromDB, getGenresMovie,\r\n    getCreditMovie\r\n}","import actionTypes from \"./actionTypes\";\r\nimport {\r\n    getMoviesFromDB, getDetailMovieFromDB, getVideoMovieFromDB,\r\n    getGenresMovie, getCreditMovie\r\n} from \"../../services/movieService\";\r\n\r\nexport const fetchMovie = (typeSort, page, language, year) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await getMoviesFromDB(typeSort, page, language, year)\r\n            // console.log(\"Check res: \", res);\r\n            if (res) {\r\n                dispatch(fetchMovieSuccess(res))\r\n            } else {\r\n                dispatch(fetchMovieFail())\r\n            }\r\n        } catch (e) {\r\n            console.log(\"fetchMovieFail code error: \", e);\r\n            dispatch(fetchMovieFail())\r\n        }\r\n    }\r\n}\r\nexport const fetchMovieSuccess = (data) => ({\r\n    type: actionTypes.FETCH_MOVIE_SUCCESS,\r\n    data: data\r\n})\r\nexport const fetchMovieFail = () => ({\r\n    type: actionTypes.FETCH_MOVIE_FAIL,\r\n})\r\n//Video Movie\r\nexport const fetchVideoMovie = (id, language) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await getVideoMovieFromDB(id, language)\r\n            // console.log(\"check res\", res);\r\n            if (res) {\r\n                dispatch(fetchVideoMovieSuccess(res))\r\n            } else {\r\n                dispatch(fetchVideoMovieFail())\r\n            }\r\n        } catch (e) {\r\n            console.log(\"fetchVideoMovieFail code error: \", e);\r\n            dispatch(fetchVideoMovieFail())\r\n        }\r\n    }\r\n}\r\nexport const fetchVideoMovieSuccess = (res) => ({\r\n    type: actionTypes.FETCH_VIDEO_MOVIE_SUCCESS,\r\n    data: res\r\n})\r\n\r\nexport const fetchVideoMovieFail = () => ({\r\n    type: actionTypes.FETCH_VIDEO_MOVIE_FAIL,\r\n})\r\n//Detail Movie\r\nexport const fetchDetailMovie = (id, language) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await getDetailMovieFromDB(id, language)\r\n            // console.log(\"Check res: \", res);\r\n            if (res) {\r\n                dispatch(fetchDetailMovieSuccess(res))\r\n            } else {\r\n                dispatch(fetchDetailMovieFail())\r\n            }\r\n        } catch (e) {\r\n            console.log(\"fetchDetailMovieFail code error: \", e);\r\n            dispatch(fetchDetailMovieFail())\r\n        }\r\n    }\r\n}\r\nexport const fetchDetailMovieSuccess = (res) => ({\r\n    type: actionTypes.FETCH_DETAIL_MOVIE_SUCCESS,\r\n    data: res\r\n})\r\nexport const fetchDetailMovieFail = () => ({\r\n    type: actionTypes.FETCH_DETAIL_MOVIE_FAIL,\r\n})\r\n//Genres Movie\r\nexport const fetchGenresMovie = (language) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await getGenresMovie(language)\r\n            // console.log(\"Check res: \", res);\r\n            if (res) {\r\n                dispatch(fetchGenresMovieSuccess(res))\r\n            } else {\r\n                dispatch(fetchGenresMovieFail())\r\n            }\r\n        } catch (e) {\r\n            console.log(\"fetchGenresMovieFail code error: \", e);\r\n            dispatch(fetchGenresMovieFail())\r\n        }\r\n    }\r\n}\r\nexport const fetchGenresMovieSuccess = (res) => ({\r\n    type: actionTypes.FETCH_GENRES_MOVIE_SUCCESS,\r\n    data: res\r\n})\r\nexport const fetchGenresMovieFail = () => ({\r\n    type: actionTypes.FETCH_GENRES_MOVIE_FAIL,\r\n})\r\n//Credit Movie\r\nexport const fetchCreditMovie = (id, language) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await getCreditMovie(id, language)\r\n            // console.log(\"Check res: \", res);\r\n            if (res) {\r\n                dispatch(fetchCreditMovieSuccess(res))\r\n            } else {\r\n                dispatch(fetchCreditMovieFail())\r\n            }\r\n        } catch (e) {\r\n            console.log(\"fetchCreditMovieFail code error: \", e);\r\n            dispatch(fetchCreditMovieFail())\r\n        }\r\n    }\r\n}\r\nexport const fetchCreditMovieSuccess = (res) => ({\r\n    type: actionTypes.FETCH_CREDIT_MOVIE_SUCCESS,\r\n    data: res\r\n})\r\nexport const fetchCreditMovieFail = () => ({\r\n    type: actionTypes.FETCH_CREDIT_MOVIE_FAIL,\r\n})","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './HomeFooter.scss'\r\nimport { FormattedMessage } from 'react-intl';\r\nfunction HomeFooter(props) {\r\n    return (\r\n        <>\r\n            <div className='home-footer'>\r\n                <p>&copy;<FormattedMessage id='footer.title' /></p>\r\n                <a target='blank' href='https://github.com/pe1d'>&#8594; <FormattedMessage id='footer.sub' /> &#8592;</a>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeFooter);\r\n","import React, { Component, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { push } from \"connected-react-router\";\r\n\r\nimport * as actions from \"../../store/actions\";\r\n\r\nimport './Login.scss';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport HomeFooter from '../HomePage/HomeFooter';\r\n// class Login extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             userName: '',\r\n//             password: '',\r\n//             errMessage: ''\r\n//         }\r\n//     }\r\n//     handleOnChangeInput = (event) => {\r\n//         this.setState({\r\n//             [event.target.name]: event.target.value,\r\n//         })\r\n//     }\r\n//     handleLogin = () => {\r\n//         this.setState({\r\n//             errMessage: ''\r\n//         })\r\n//         let { userName, password } = this.state;\r\n//         console.log('Username: ', userName, 'Password: ', password)\r\n//         try {\r\n//             let data = { userName, password }\r\n//             this.props.userLoginSuccess(data)\r\n//         } catch (error) {\r\n//             if (error.response) {\r\n//                 if (error.response.data) {\r\n//                     this.setState({\r\n//                         errMessage: error.response.data.message\r\n//                     })\r\n//                 }\r\n//             }\r\n//         }\r\n//     }\r\n//     handlekeydown = (event) => {\r\n//         if (event.key === \"Enter\") {\r\n//             this.handleLogin()\r\n//         }\r\n//     }\r\n//     render() {\r\n//         return (\r\n//             <>\r\n//                 <div className='login-background'>\r\n//                     <div className='login-container' >\r\n//                         <div className='login-content'>\r\n//                             <div>\r\n//                                 <h1 style={{ textAlign: 'center' }}><FormattedMessage id='login.sign-in' /></h1>\r\n//                             </div>\r\n//                             <form>\r\n//                                 <div className=\"col-12 form-group login-input\">\r\n//                                     <label className=\"form-label\"><FormattedMessage id='login.input-email-title' /></label>\r\n//                                     <div className=\"input-group input-group-lg\">\r\n//                                         <FormattedMessage id=\"login.placeholder-email\">\r\n//                                             {placeholder =>\r\n//                                                 <input type=\"email\" class=\"form-control\" name='userName' aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-lg\"\r\n//                                                     placeholder={placeholder}\r\n//                                                     value={this.state.userName} onChange={(event) => this.handleOnChangeInput(event)} />\r\n//                                             }\r\n//                                         </FormattedMessage>\r\n//                                     </div>\r\n//                                 </div>\r\n//                                 <div className=\"col-12 form-group login-input\">\r\n//                                     <label className=\"form-label\"><FormattedMessage id='login.input-password-title' /></label>\r\n//                                     <div className=\"input-group input-group-lg\">\r\n//                                         <FormattedMessage id=\"login.placeholder-password\">\r\n//                                             {placeholder =>\r\n//                                                 <input type=\"password\" class=\"form-control\" name='password' aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-lg\"\r\n//                                                     placeholder={placeholder}\r\n//                                                     value={this.state.password} onChange={(event) => this.handleOnChangeInput(event)} />\r\n//                                             }\r\n//                                         </FormattedMessage>\r\n//                                     </div>\r\n//                                 </div>\r\n//                                 <div className='col-12' style={{ color: 'red' }}>\r\n//                                     {this.state.errMessage}\r\n//                                 </div>\r\n//                                 <button type=\"button\" className=\"btn btn-primary btn-signin\"\r\n//                                     onClick={() => this.handleLogin()}\r\n//                                 >\r\n//                                     <FormattedMessage id='login.btn-sign-in' />\r\n//                                 </button>\r\n//                                 <div className=\"col-12\">\r\n//                                     <div className=\"col\" style={{ margin: '5px', textAlign: 'center' }}>\r\n//                                         <a href=\"#!\"><FormattedMessage id='login.forgot-password' /></a>\r\n//                                     </div>\r\n//                                 </div>\r\n//                                 <div className=\"text-center \">\r\n//                                     <p><FormattedMessage id='login.title-reg' /><a href=\"#!\"><FormattedMessage id='login.reg' /></a></p>\r\n//                                     <p><FormattedMessage id='login.more-way-sign-in' /></p>\r\n//                                     <div className='sign-other'>\r\n//                                         <button type=\"button\" className=\"btn btn-link btn-floating mx-1\">\r\n//                                             <i className=\"fab fa-facebook-f\"></i>\r\n//                                         </button>\r\n\r\n//                                         <button type=\"button\" className=\"btn btn-link btn-floating mx-1\">\r\n//                                             <i className=\"fab fa-google\"></i>\r\n//                                         </button>\r\n\r\n//                                         <button type=\"button\" className=\"btn btn-link btn-floating mx-1\">\r\n//                                             <i className=\"fab fa-twitter\"></i>\r\n//                                         </button>\r\n\r\n//                                         <button type=\"button\" className=\"btn btn-link btn-floating mx-1\">\r\n//                                             <i className=\"fab fa-github\"></i>\r\n//                                         </button>\r\n//                                     </div>\r\n//                                 </div>\r\n//                             </form>\r\n//                         </div>\r\n//                     </div >\r\n//                 </div >\r\n//                 <HomeFooter></HomeFooter>\r\n//             </>\r\n//         )\r\n//     }\r\n// }\r\nfunction Login(props) {\r\n    const [user, setUser] = useState(\r\n        {\r\n            userName: '',\r\n            password: ''\r\n        }\r\n    )\r\n    const [errMessage, setErrMessage] = useState('')\r\n    const handleLogin = () => {\r\n        setErrMessage('')\r\n        console.log('Username: ', user.userName, 'Password: ', user.password)\r\n        try {\r\n            props.userLoginSuccess(user)\r\n        } catch (error) {\r\n            if (error.response) {\r\n                if (error.response.data) {\r\n                    this.setState({\r\n                        errMessage: error.response.data.message\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const handlekeydown = (event) => {\r\n        if (event.key === \"Enter\") {\r\n            this.handleLogin()\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className='login-background'>\r\n                <div className='login-container' >\r\n                    <div className='login-content'>\r\n                        <div>\r\n                            <h1 style={{ textAlign: 'center' }}><FormattedMessage id='login.sign-in' /></h1>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"col-12 form-group login-input\">\r\n                                <label className=\"form-label\"><FormattedMessage id='login.input-email-title' /></label>\r\n                                <div className=\"input-group input-group-lg\">\r\n                                    <FormattedMessage id=\"login.placeholder-email\">\r\n                                        {placeholder =>\r\n                                            <input type=\"email\" class=\"form-control\" name='userName' aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-lg\"\r\n                                                placeholder={placeholder}\r\n                                                value={user.userName} onChange={(event) => setUser({ userName: event.target.value })} />\r\n                                        }\r\n                                    </FormattedMessage>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12 form-group login-input\">\r\n                                <label className=\"form-label\"><FormattedMessage id='login.input-password-title' /></label>\r\n                                <div className=\"input-group input-group-lg\">\r\n                                    <FormattedMessage id=\"login.placeholder-password\">\r\n                                        {placeholder =>\r\n                                            <input type=\"password\" class=\"form-control\" name='password' aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-lg\"\r\n                                                placeholder={placeholder}\r\n                                                value={user.password} onChange={(event) => setUser({ password: event.target.value })} />\r\n                                        }\r\n                                    </FormattedMessage>\r\n                                </div>\r\n                            </div>\r\n                            <div className='col-12' style={{ color: 'red' }}>\r\n                                {errMessage}\r\n                            </div>\r\n                            <button type=\"button\" className=\"btn btn-primary btn-signin\"\r\n                                onClick={() => handleLogin()}\r\n                            >\r\n                                <FormattedMessage id='login.btn-sign-in' />\r\n                            </button>\r\n                            <div className=\"col-12\">\r\n                                <div className=\"col\" style={{ margin: '5px', textAlign: 'center' }}>\r\n                                    <a href=\"#!\"><FormattedMessage id='login.forgot-password' /></a>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"text-center \">\r\n                                <p><FormattedMessage id='login.title-reg' /><a href=\"#!\"><FormattedMessage id='login.reg' /></a></p>\r\n                                <p><FormattedMessage id='login.more-way-sign-in' /></p>\r\n                                <div className='sign-other'>\r\n                                    <button type=\"button\" className=\"btn btn-link btn-floating mx-1\">\r\n                                        <i className=\"fab fa-facebook-f\"></i>\r\n                                    </button>\r\n\r\n                                    <button type=\"button\" className=\"btn btn-link btn-floating mx-1\">\r\n                                        <i className=\"fab fa-google\"></i>\r\n                                    </button>\r\n\r\n                                    <button type=\"button\" className=\"btn btn-link btn-floating mx-1\">\r\n                                        <i className=\"fab fa-twitter\"></i>\r\n                                    </button>\r\n\r\n                                    <button type=\"button\" className=\"btn btn-link btn-floating mx-1\">\r\n                                        <i className=\"fab fa-github\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div >\r\n            </div >\r\n            <HomeFooter></HomeFooter>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        // navigate: (path) => dispatch(push(path)),\r\n        userLoginSuccess: (userInfo) => dispatch(actions.userLoginSuccess(userInfo))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Home(props) {\r\n    const { isLoggedIn } = props;\r\n    let linkToRedirect = isLoggedIn ? '/home' : '/about';\r\n    return (\r\n        <Redirect to={linkToRedirect} />\r\n    );\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\n// import '../../containers/Auth/About.scss'\r\nimport * as actions from \"../../store/actions\";\r\nimport { FormattedMessage } from 'react-intl';\r\nfunction DetailAbout(props) {\r\n    let { id, srcImg } = props\r\n    return (\r\n        <>\r\n            {id && id % 2 == 1 ?\r\n                <div className='detail-about'>\r\n                    <div className='content-image' style={{\r\n                        backgroundImage: `url('${srcImg}')`\r\n                    }}>\r\n                    </div>\r\n                    <div className='content-title'>\r\n                        <div className='title-detail'>\r\n                            <FormattedMessage id={`about.details-${id}`} />\r\n                        </div>\r\n                        <div className='p1'>\r\n                            <FormattedMessage id={`about.sub-details-${id}`} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className={`detail-about id-${id % 2}`}>\r\n                    <div className='content-title'>\r\n                        <div className='title-detail'>\r\n                            <FormattedMessage id={`about.details-${id}`} />\r\n                        </div>\r\n                        <div className='p1'>\r\n                            <FormattedMessage id={`about.sub-details-${id}`} />\r\n                        </div>\r\n                    </div>\r\n                    <div className='content-image' style={{\r\n                        backgroundImage: `url('${srcImg}')`\r\n                    }}>\r\n                    </div>\r\n                </div >\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        processLogout: () => dispatch(actions.processLogout()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailAbout);","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './About.scss'\r\nimport * as actions from \"../../store/actions\";\r\nimport { LANGUAGES } from '../../untils'\r\nimport { FormattedMessage } from 'react-intl';\r\nimport HomeFooter from '../HomePage/HomeFooter';\r\nimport DetailAbout from '../../components/About/DetailAbout';\r\nfunction About(props) {\r\n    const [inputEmail, setInputEmail] = useState('');\r\n    const { language } = props;\r\n    const [background, setBackground] = useState('header-about')\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n            console.log(window.scrollY);\r\n            if (window.scrollY > 80) {\r\n                setBackground('header-about bg-solid')\r\n            } else {\r\n                setBackground('header-about')\r\n            }\r\n        }\r\n        window.addEventListener('scroll', handleScroll, true)\r\n        return () => { window.removeEventListener(\"scroll\", handleScroll, true) }\r\n    }, [])\r\n    const changeLanguage = (language) => {\r\n        props.changeLanguageAppRedux(language)\r\n    }\r\n    const hanldeLogin = () => {\r\n        props.history.push(`/login`)\r\n    }\r\n    return (\r\n        <>\r\n            <div className='container-about'>\r\n                <div className={background}>\r\n                    <div className='content-left'>\r\n                        <div className='logo-about'>\r\n                        </div>\r\n                        <div className='name-logo'>\r\n                        </div>\r\n                    </div>\r\n                    <div className='content-right'>\r\n                        <div className='button-login'>\r\n                            <button type=\"button\" class=\"btn btn-danger\" onClick={() => hanldeLogin()}><FormattedMessage id='about.login' /></button>\r\n                        </div>\r\n                        <div className='languages'>\r\n                            <div className={language === LANGUAGES.VI ? 'lang-vi active' : 'lang-vi'}>\r\n                                <span onClick={() => changeLanguage(LANGUAGES.VI)}>VI</span>\r\n                            </div>\r\n                            <div className={language === LANGUAGES.EN ? 'lang-en active' : 'lang-en'}>\r\n                                <span onClick={() => changeLanguage(LANGUAGES.EN)}>EN</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='banner-about'>\r\n                    <div className='title-banner'>\r\n                        <h1><FormattedMessage id='about.title-banner' /></h1>\r\n                        <div className='p1'><FormattedMessage id='about.p1-banner' /></div>\r\n                        <div className='p2'>\r\n                            <FormattedMessage id='about.p2-banner' />\r\n                        </div>\r\n                    </div>\r\n                    <div className='input-email-about'>\r\n                        <div className=\"input-group input-group-lg\">\r\n                            <FormattedMessage id=\"about.placeholder-email\">\r\n                                {placeholder =>\r\n                                    <input type=\"text\" class=\"form-control\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-lg\"\r\n                                        placeholder={placeholder}\r\n                                        value={inputEmail} onChange={(event) => setInputEmail(event.target.value)} />\r\n                                }\r\n                            </FormattedMessage>\r\n\r\n                            <button class=\"btn btn-danger\" id=\"inputGroup-sizing-lg\" style={{ textAlign: 'center' }}><FormattedMessage id='about.get-started' /></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <DetailAbout\r\n                    id='1'\r\n                    srcImg='https://assets.nflxext.com/ffe/siteui/acquisition/ourStory/fuji/desktop/mobile-0819.jpg'\r\n                    srcVid=''\r\n                />\r\n                <DetailAbout\r\n                    id='2'\r\n                    srcImg='https://occ-0-325-395.1.nflxso.net/dnm/api/v6/19OhWN2dO19C9txTON9tvTFtefw/AAAABZSTDsJQCe6ndkevSo7c_grcr0f2YJ5pimzeSor98ix4Earwyoza7Liyg8OsNpA2cg3HKSF63qppfkKVP8BTEmcVRAkwa2lhcl5S.png?r=d73'\r\n                    srcVid=''\r\n                />\r\n            </div >\r\n            <HomeFooter />\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        processLogout: () => dispatch(actions.processLogout()),\r\n        changeLanguageAppRedux: (language) => dispatch(actions.changeLanguageApp(language))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(About);","import React, { Component, Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createPortal } from 'react-dom';\r\nimport './HeaderSW.scss'\r\nimport * as actions from \"../../../../store/actions\";\r\nimport { LANGUAGES } from '../../../../untils';\r\nimport ReactModal from 'react-modal';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\n\r\nfunction HeaderSW(props) {\r\n    const [noticeList, setNoticeList] = useState([\r\n        { id: '1', title: 'notice 1', date: 1716722226, status: 'N' },\r\n        { id: '2', title: 'notice 2', date: 1716376619, status: 'O' },\r\n        { id: '3', title: 'notice 3', date: 1708600619, status: 'N' },\r\n        { id: '4', title: 'notice 4', date: 1716376619, status: 'N' },\r\n        { id: '5', title: 'notice 5', date: 1708600619, status: 'N' },\r\n        { id: '6', title: 'notice 6', date: 1716376619, status: 'O' },\r\n        { id: '7', title: 'notice 7', date: 1708600619, status: 'N' }\r\n    ])\r\n    const [modal, setModal] = useState(false)\r\n    const [user, setUser] = useState({\r\n        userName: '',\r\n        avatar: ''\r\n    })\r\n    const handleOpenModal = () => {\r\n        setModal(!modal)\r\n    }\r\n    const handleCloseModal = () => {\r\n        setModal(false)\r\n    }\r\n    const handleDeleteNotice = (noti, event) => {\r\n        event.stopPropagation();\r\n        const newNoti = noticeList.filter((item) => {\r\n            console.log('check item', item);\r\n            return item.id !== noti.id;\r\n        })\r\n        setNoticeList(newNoti)\r\n    }\r\n    const handleClickONnotice = (noti) => {\r\n        const newNotice = noticeList.map((item) => {\r\n            if (item.id == noti.id && noti.status == 'N') {\r\n                item.status = 'O';\r\n            }\r\n            return item;\r\n        })\r\n        setNoticeList(newNotice)\r\n    }\r\n    const checkNewNoti = () => {\r\n        let allNotice = noticeList.filter((e) => {\r\n            return e.status == 'N'\r\n        }).length;\r\n        console.log(allNotice);\r\n        return allNotice\r\n    }\r\n    return (\r\n        <>\r\n            <div typeof='button' className='btn-noti' onClick={() => handleOpenModal()} >\r\n                < div class=\"btn-badge pulse-button\">{checkNewNoti()}</div>\r\n                <i className=\"fas fa-bell\" ></i>\r\n                <div className='box-noti'>\r\n                    {noticeList && noticeList.length > 0 &&\r\n                        noticeList.map((item, index) => {\r\n                            return (\r\n                                <div class=\"sec\" key={index} onClick={() => handleClickONnotice(item)}>\r\n\r\n                                    <div className='new' >\r\n                                        {item.status && item.status === 'N' &&\r\n                                            <i class=\"fas fa-circle\"></i>\r\n                                        }\r\n                                    </div>\r\n                                    <div className='profile'></div>\r\n                                    <div class=\"profCont\">\r\n                                        <div class=\"txt\">{item.title}</div>\r\n                                        <div class=\"txt sub\">{new Date(item.date * 1000).toLocaleString()}</div>\r\n                                    </div>\r\n                                    <div className='delete-noti' onClick={(event) => handleDeleteNotice(item, event)}>\r\n                                        <i className=\"fas fa-times\" ></i>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className='user'>\r\n                <div className='name'>Xuan Diep</div>\r\n                <div className='more-info'><i class=\"fas fa-caret-down\"></i></div>\r\n                <div className='logo' style={{ backgroundImage: `url(${user.avatar})` }}>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        processLogout: () => dispatch(actions.processLogout()),\r\n        changeLanguageAppRedux: (language) => dispatch(actions.changeLanguageApp(language))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderSW);","import { connect } from 'react-redux';\r\n\r\nimport './HeaderMoviePage.scss'\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { LANGUAGES } from '../../../untils';\r\nimport * as actions from \"../../../store/actions\";\r\nimport { withRouter } from 'react-router';\r\nimport HeaderSW from '../../mainWatch/SideWatch/Header/HeaderSW';\r\n\r\nfunction HeaderMoviePage(props) {\r\n    const [user, setUser] = useState({\r\n        userName: '',\r\n        avatar: ''\r\n    })\r\n    const [background, setBackground] = useState('headerMoviePage');\r\n    const { side } = props\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n            console.log(window.scrollY);\r\n            // console.log('check ref', header);\r\n            if (window.scrollY >= 80) {\r\n                setBackground('headerMoviePage bg-solid')\r\n            } else {\r\n                setBackground('headerMoviePage')\r\n            }\r\n        }\r\n        window.addEventListener('scroll', handleScroll, true)\r\n        return () => window.removeEventListener('scroll', handleScroll, true)\r\n    }, [])\r\n    const handleBackHome = () => {\r\n        props.history.push('/home')\r\n    }\r\n    return (\r\n        <div className={background}>\r\n            <div className='content-left'>\r\n                <div className='btn-menu col-1' onClick={() => props.changeSide(!side)} >\r\n                    <i className=\"fas fa-bars\"></i>\r\n                </div>\r\n                <div className='name-brand col-4' onClick={() => handleBackHome()}>\r\n                </div>\r\n            </div>\r\n            <div className='content-center'>\r\n                <div className='menu-movie'>\r\n                    <div className='name-menu'>\r\n                        Trang chủ\r\n                    </div>\r\n                    <div className='name-menu'>\r\n                        Phim Phổ biến\r\n                    </div>\r\n                    <div className='name-menu'>\r\n                        Phim bộ\r\n                    </div>\r\n                    <div className='name-menu'>\r\n                        Phim lẻ\r\n                    </div>\r\n                </div>\r\n                <div className='content-2'>\r\n                    <div className='languages' style={{ width: '60px', height: '30px' }}>\r\n                        <div className={props.language === LANGUAGES.VI ? 'lang-vi active' : 'lang-vi'}>\r\n                            <span onClick={() => props.changeLanguageAppRedux(LANGUAGES.VI)}>VI</span>\r\n                        </div>\r\n                        <div className={props.language === LANGUAGES.EN ? 'lang-en active' : 'lang-en'}>\r\n                            <span onClick={() => props.changeLanguageAppRedux(LANGUAGES.EN)}>EN</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='header-search'>\r\n                        <i class=\"fa fa-search\"></i>\r\n                        <input type=\"text\" className=\"form-control form-input\" placeholder=\"Search anything...\" />\r\n                        <span className=\"left-pan\"><i class=\"fa fa-microphone\"></i></span>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className='content-right'>\r\n                <HeaderSW />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n        side: state.app.side\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeLanguageAppRedux: (language) => dispatch(actions.changeLanguageApp(language)),\r\n        changeSide: (side) => dispatch(actions.setSideInfo(side))\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(HeaderMoviePage));","import React, { Component, Fragment, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './dMoviePage.scss'\r\nimport '../../components/input/ToogleBtn.scss'\r\nimport * as actions from \"../../store/actions\";\r\nimport StarRatings from 'react-star-ratings';\r\nimport HomeFooter from '../HomePage/HomeFooter'\r\nimport { ApiKey, LANGUAGES } from '../../untils'\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { withRouter } from 'react-router';\r\nimport YouTube from 'react-youtube';\r\nimport Slider from 'react-slick';\r\nimport moment from 'moment/moment';\r\nimport ReactModal from 'react-modal';\r\nimport HeaderMoviePage from '../Auth/Header/HeaderMoviePage';\r\n\r\nfunction DMoviePage(props) {\r\n    const [infoMovie, setInfoMovie] = useState({\r\n        creditMovie: [],\r\n        detailMovie: {}\r\n    });\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [watchVid, setWatchVid] = useState({})\r\n    const { detailMovie, videoMovie, creditMovie } = props\r\n\r\n    useEffect(() => {\r\n        props.fetchVideoMovie(props.match.params.id, props.language)\r\n        props.fetchDetailMovie(props.match.params.id, props.language)\r\n        props.fetchCreditMovie(props.match.params.id, props.language)\r\n        // console.log('check props', props);\r\n    }, [])\r\n    useEffect(() => {\r\n        props.fetchVideoMovie(props.match.params.id, props.language)\r\n        props.fetchDetailMovie(props.match.params.id, props.language)\r\n        props.fetchCreditMovie(props.match.params.id, props.language)\r\n    }, [props.language])\r\n\r\n    const hanldeWatchMovie = () => {\r\n        props.history.push(`/wMovie/${props.match.params.id}`)\r\n    }\r\n    const checkS = (hour) => {\r\n        if (props.language === LANGUAGES.EN) {\r\n            if (hour > 1) {\r\n                return 's'\r\n            }\r\n        }\r\n    }\r\n    const searchCredit = (role) => {\r\n        let director = ''\r\n        if (creditMovie && creditMovie.crew && creditMovie.crew.length > 0) {\r\n            director = creditMovie.crew.find((e) => {\r\n                return e.department === role\r\n            })\r\n        }\r\n        return director.name\r\n    }\r\n    const handleOpenModal = (item) => {\r\n        setShowModal(true);\r\n        setWatchVid(item);\r\n    }\r\n    const handleCloseModal = () => {\r\n        setShowModal(false)\r\n    }\r\n    let settings = {\r\n        speed: 500,\r\n        slidesToShow: 5,\r\n        slidesToScroll: 5,\r\n        infinite: false,\r\n        initialSlide: 0,\r\n        responsive: [\r\n            {\r\n                breakpoint: 1324,\r\n                settings: {\r\n                    slidesToShow: 4,\r\n                    slidesToScroll: 4,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 932,\r\n                settings: {\r\n                    slidesToShow: 3,\r\n                    slidesToScroll: 3,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 680,\r\n                settings: {\r\n                    slidesToShow: 2,\r\n                    slidesToScroll: 2,\r\n                }\r\n            }\r\n        ]\r\n    };\r\n    let settingsTrailer = {\r\n        speed: 500,\r\n        slidesToShow: 4,\r\n        slidesToScroll: 4,\r\n        infinite: false,\r\n        initialSlide: 0,\r\n        responsive: [\r\n            {\r\n                breakpoint: 1400,\r\n                settings: {\r\n                    slidesToShow: 3,\r\n                    slidesToScroll: 3,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 1024,\r\n                settings: {\r\n                    slidesToShow: 2,\r\n                    slidesToScroll: 2,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 680,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1,\r\n                }\r\n            }\r\n        ]\r\n    };\r\n    let opts = {\r\n        height: '585',\r\n        width: '960',\r\n        playerVars: {\r\n            autoplay: 1,\r\n        },\r\n    }\r\n    let year = new Date(detailMovie.release_date)\r\n    let timeHour = moment().startOf('day').add(detailMovie.runtime, 'minutes').format(`hh`);\r\n    let timeMinute = moment().startOf('day').add(detailMovie.runtime, 'minutes').format(`mm`);\r\n    let rating = detailMovie.vote_average / 2;\r\n    return (\r\n        <>\r\n            <div className='container-dMovie' >\r\n                <HeaderMoviePage />\r\n                <div className='body-dMovie'>\r\n                    <div className='banner-dMovie' style={{ backgroundImage: `url(https://image.tmdb.org/t/p/original${detailMovie.backdrop_path})` }}>\r\n                    </div>\r\n                    <div className='section-dMovie'>\r\n                        <div className='container sectionMovie'>\r\n                            <div className='column-1-4'>\r\n                                <div className='poster-movie' style={{ backgroundImage: `url(https://image.tmdb.org/t/p/original${detailMovie.poster_path})` }}></div>\r\n                                <div className='btn-watch' onClick={() => hanldeWatchMovie()}><i className=\"fas fa-play\"></i>\r\n                                    <FormattedMessage id='dMoviePage.watch' />\r\n                                </div>\r\n                            </div>\r\n                            <div className='column-3-4'>\r\n                                <div className='original-title'><h1>{detailMovie.original_title}</h1></div>\r\n                                <div className='sub-title'>{detailMovie.title} (<a href='#'>{year.getFullYear()}</a>)</div>\r\n                                <div className='runtime-movie'>\r\n                                    {timeHour} <FormattedMessage id='dMoviePage.hours' />{checkS(timeHour)} {timeMinute} <FormattedMessage id='dMoviePage.minutes' />\r\n                                </div>\r\n                                <div className='imdb-movie'>\r\n                                    {rating && rating &&\r\n                                        <StarRatings\r\n                                            rating={rating}\r\n                                            starDimension=\"30px\"\r\n                                            starSpacing=\"2px\"\r\n                                            starRatedColor=\"#07b8a0\"\r\n                                        />\r\n                                    }\r\n                                </div>\r\n                                <div className='level-genres'>\r\n                                    <div className='btn-list'>\r\n                                        <div className='btn-share'><i className=\"fab fa-facebook-square\"></i>\r\n                                            <FormattedMessage id='dMoviePage.share' />\r\n                                        </div>\r\n                                        <div className='btn-addList'>\r\n                                            <i className=\"fas fa-plus\"></i>  <FormattedMessage id='dMoviePage.watchlist' />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='list-genres'>\r\n                                        {detailMovie && detailMovie.genres && detailMovie.genres.length > 0 &&\r\n                                            detailMovie.genres.map((item, index) => {\r\n                                                return (\r\n                                                    <div className='item-genres'>{item.name}</div>\r\n                                                )\r\n                                            })\r\n\r\n                                        }\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <dl className='info-movie'>\r\n                                    <dt> <FormattedMessage id='dMoviePage.director' /></dt>\r\n                                    <dd className='csv'>\r\n                                        <a href='#'>{searchCredit(\"Directing\")}</a>\r\n                                    </dd>\r\n                                    <dt> <FormattedMessage id='dMoviePage.writer' /></dt>\r\n                                    <dd className='csv'>\r\n                                        <a href='#'>{searchCredit(\"Directing\")}</a>\r\n                                    </dd>\r\n                                    <dt> <FormattedMessage id='dMoviePage.nation' /></dt>\r\n                                    <dd className='csv'>\r\n                                        <a href='#'>{detailMovie.origin_country}</a>\r\n                                    </dd>\r\n                                    <dt> <FormattedMessage id='dMoviePage.release-date' /></dt>\r\n                                    <dd className='csv'>\r\n                                        <a href='#'>{detailMovie.release_date}</a>\r\n                                    </dd>\r\n                                </dl>\r\n                                <div className='overview'>\r\n                                    {detailMovie.overview}\r\n                                </div>\r\n                                <div className='actor'>\r\n                                    <div className='title-actor'>\r\n                                        <FormattedMessage id='dMoviePage.actor' />\r\n                                    </div>\r\n                                    <div className='cast'>\r\n                                        <Slider {...settings}>\r\n                                            {creditMovie && creditMovie.cast && creditMovie.cast.length > 0 &&\r\n                                                creditMovie.cast.map((item, index) => {\r\n                                                    if (index < 20) {\r\n                                                        if (item.profile_path) {\r\n                                                            return (\r\n                                                                <div className='container-list-actor' key={index}>\r\n                                                                    <div className='img-actor'\r\n                                                                        style={{ backgroundImage: `url(https://image.tmdb.org/t/p/original${item.profile_path})` }} >\r\n                                                                    </div>\r\n                                                                    <div className='name-actor'>\r\n                                                                        <a href='#'>{item.name}</a>\r\n                                                                    </div>\r\n                                                                    <div className='name-character'>\r\n                                                                        {item.character}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            )\r\n                                                        }\r\n                                                        else {\r\n                                                            return (\r\n                                                                <div className='container-list-actor' key={index}>\r\n                                                                    <div className='img-actor none'>\r\n                                                                        <i class=\"fas fa-user\"></i>\r\n                                                                    </div>\r\n                                                                    <div className='name-actor'>\r\n                                                                        <a href='#'>{item.name}</a>\r\n                                                                    </div>\r\n                                                                    <div className='name-character'>\r\n                                                                        {item.character}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            )\r\n                                                        }\r\n                                                    }\r\n                                                })\r\n                                            }\r\n                                        </Slider>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='trailer'>\r\n                                    <div className='title-trailer'>\r\n                                        <FormattedMessage id='dMoviePage.trailer' />\r\n                                    </div>\r\n                                    <div className='trailer-list'>\r\n                                        <Slider {...settingsTrailer}>\r\n                                            {videoMovie && videoMovie.length > 0 &&\r\n                                                videoMovie.map((item, index) => {\r\n                                                    if (index < 20) {\r\n                                                        return (\r\n                                                            <div className='container-list-videoM' onClick={() => handleOpenModal(item)}>\r\n                                                                <div className='img-video'\r\n                                                                    style={{ backgroundImage: `url(https://img.youtube.com/vi/${item.key}/mqdefault.jpg)` }}>\r\n                                                                    <div className='play-video'><i className=\"fas fa-play\" /></div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )\r\n                                                    }\r\n                                                })\r\n                                            }\r\n                                        </Slider>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div >\r\n            <div className='modal'>\r\n                <ReactModal\r\n                    isOpen={showModal}\r\n                    contentLabel=\"onRequestClose Example\"\r\n                    onRequestClose={handleCloseModal}\r\n                    shouldCloseOnOverlayClick={true}\r\n                    className=\"Modal\"\r\n                    overlayClassName=\"Overlay\"\r\n                >\r\n                    <div className='close' onClick={handleCloseModal}><i className=\"fas fa-times\"></i></div>\r\n                    {watchVid && watchVid.key &&\r\n                        <YouTube\r\n                            videoId={watchVid.key}\r\n                            opts={opts}\r\n                        />\r\n                    }\r\n                </ReactModal>\r\n            </div>\r\n            <HomeFooter />\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n        detailMovie: state.movie.detailsMovie,\r\n        videoMovie: state.movie.videoMovie,\r\n        creditMovie: state.movie.creditMovie,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        processLogout: () => dispatch(actions.processLogout()),\r\n        changeLanguageAppRedux: (language) => dispatch(actions.changeLanguageApp(language)),\r\n        fetchDetailMovie: (id, language) => dispatch(actions.fetchDetailMovie(id, language)),\r\n        fetchVideoMovie: (id, language) => dispatch(actions.fetchVideoMovie(id, language)),\r\n        fetchCreditMovie: (id, language) => dispatch(actions.fetchCreditMovie(id, language))\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DMoviePage));","import React, { Component, Fragment, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './watchMoviePage.scss'\r\nimport * as actions from \"../../store/actions\";\r\nimport HomeFooter from '../HomePage/HomeFooter'\r\nimport { withRouter } from 'react-router';\r\nimport YouTube from 'react-youtube';\r\nimport ReactPlayer from 'react-player';\r\nimport HeaderMoviePage from '../Auth/Header/HeaderMoviePage';\r\nconst getWindowDimensions = () => {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n        width,\r\n        height\r\n    };\r\n}\r\nconst Player = (vid) => {\r\n    const [windowDimensions, setWindowDimensions] = useState(\r\n        getWindowDimensions()\r\n    );\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n        window.addEventListener(\"resize\", handleResize);\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []);\r\n    const opts = {\r\n        height: windowDimensions.width * 0.7 * 9 / 16,\r\n        width: windowDimensions.width * 0.7,\r\n        playerVars: {\r\n            autoplay: 0,\r\n        },\r\n    };\r\n    return (\r\n        <>\r\n            {/* width:{windowDimensions.width} height: {windowDimensions.height} */}\r\n            {vid && vid.key &&\r\n                // <YouTube\r\n                //     videoId={vid.key}\r\n                //     opts={opts}\r\n                // />\r\n                <ReactPlayer\r\n                    url={`https://www.youtube.com/watch?v=${vid.key}`}\r\n                    height={opts.height}\r\n                    width={opts.width}\r\n                    controls={true}\r\n                    muted={true}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}\r\nfunction WatchMoviePage(props) {\r\n    const [vid, setVid] = useState({})\r\n    useEffect(() => {\r\n        props.fetchVideoMovie(props.match.params.id, props.language)\r\n    }, [])\r\n    useEffect(() => {\r\n        props.fetchVideoMovie(props.match.params.id, props.language)\r\n    }, [props.language])\r\n    let { videoMovie } = props;\r\n    const rederTrailer = () => {\r\n        console.log(props);\r\n        if (videoMovie) {\r\n            let trailer = videoMovie.find(vid => vid.name.toLowerCase().includes(\"trailer\") === true)\r\n            return trailer\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        const trailer = rederTrailer()\r\n        setVid(trailer)\r\n    }, [videoMovie])\r\n\r\n    return (\r\n        <>\r\n            <div className='container-watch-movie'>\r\n                <HeaderMoviePage />\r\n                <div className='body-watchMovie'>\r\n                    {Player(vid)}\r\n                </div>\r\n                <HomeFooter />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n        detailMovie: state.movie.detailsMovie,\r\n        videoMovie: state.movie.videoMovie,\r\n        creditMovie: state.movie.creditMovie,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        processLogout: () => dispatch(actions.processLogout()),\r\n        changeLanguageAppRedux: (language) => dispatch(actions.changeLanguageApp(language)),\r\n        fetchDetailMovie: (id, language) => dispatch(actions.fetchDetailMovie(id, language)),\r\n        fetchVideoMovie: (id, language) => dispatch(actions.fetchVideoMovie(id, language)),\r\n        fetchCreditMovie: (id, language) => dispatch(actions.fetchCreditMovie(id, language))\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(WatchMoviePage));","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Menu.scss'\r\nimport * as actions from \"../../../../store/actions\";\r\nimport { LANGUAGES } from '../../../../untils';\r\nimport { FormattedMessage } from 'react-intl';\r\nfunction Menu(props) {\r\n    return (\r\n        <>\r\n            <div className='menu'>\r\n                <ul className=\"main-menu ps-4\">\r\n                    <li className=\"title-menu\">\r\n                        <FormattedMessage id='sider-info.menu' />\r\n                        <ul className='sub-menu'>\r\n                            <li className='sub-li active'>\r\n                                <div className='icon'>\r\n                                    <i className=\"fas fa-home\"></i>\r\n                                </div>\r\n                                <div className='text'>\r\n                                    <FormattedMessage id='sider-info.home' />\r\n                                </div>\r\n                            </li>\r\n                            <li className='sub-li'>\r\n                                <div className='icon'>\r\n                                    <i className=\"fab fa-discourse icon\"></i>\r\n                                </div>\r\n                                <div className='text'>\r\n                                    <FormattedMessage id='sider-info.discover' />\r\n                                </div>\r\n                            </li>\r\n                            <li className='sub-li'>\r\n                                <div className='icon'>\r\n                                    <i className=\"fas fa-trophy\"></i>\r\n                                </div>\r\n                                <div className='text'>\r\n                                    <FormattedMessage id='sider-info.award' />\r\n                                </div>\r\n                            </li>\r\n                            <li className='sub-li'>\r\n                                <div className='icon'>\r\n                                    <i className=\"fas fa-user\"></i>\r\n                                </div>\r\n                                <div className='text'>\r\n                                    <FormattedMessage id='sider-info.celeb' />\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                    <li className=\"title-menu\">\r\n                        <FormattedMessage id='sider-info.library' />\r\n                        <ul className='sub-menu'>\r\n                            <li className='sub-li'>\r\n                                <div className=\"icon\"  >\r\n                                    <i className=\"fas fa-history\"></i>\r\n                                </div>\r\n                                <div className='text'>\r\n                                    <FormattedMessage id='sider-info.recent' />\r\n                                </div>\r\n                            </li>\r\n                            <li className='sub-li'>\r\n                                <div className=\"icon\"  >\r\n                                    <i className=\"fas fa-star\"></i>\r\n                                </div>\r\n                                <div className='text'>\r\n                                    <FormattedMessage id='sider-info.top-rated' />\r\n                                </div>\r\n                            </li>\r\n                            <li className='sub-li'>\r\n                                <div className=\"icon\"  >\r\n                                    <i className=\"fas fa-cloud-download-alt\"></i>\r\n                                </div>\r\n                                <div className='text'>\r\n                                    <FormattedMessage id='sider-info.download' />\r\n                                </div>\r\n                            </li>\r\n                            <li className='sub-li'>\r\n                                <div className=\"icon\"  >\r\n                                    <i className=\"fas fa-heart\"></i>\r\n                                </div>\r\n                                <div className='text'>\r\n                                    <FormattedMessage id='sider-info.playlist' />\r\n                                </div>\r\n                            </li>\r\n                            <li className='sub-li'>\r\n                                <div className=\"icon\"  >\r\n                                    <i className=\"fas fa-plus-square\"></i>\r\n                                </div>\r\n                                <div className='text'>\r\n                                    <FormattedMessage id='sider-info.watchlist' />\r\n                                </div>\r\n                            </li>\r\n                            <li className='sub-li'>\r\n                                <div className=\"icon\"  >\r\n                                    <i className=\"fas fa-check-square\"></i>\r\n                                </div>\r\n                                <div className='text'>\r\n                                    <FormattedMessage id='sider-info.completed' />\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                    <li className=\"title-menu\">\r\n                        <FormattedMessage id='sider-info.general' />\r\n                        <ul className='sub-menu'>\r\n                            <li className='sub-li'>\r\n                                <div className=\"icon\"  >\r\n                                    <i className=\"fas fa-cog\"></i>\r\n                                </div>\r\n                                <div className='text'>\r\n                                    <FormattedMessage id='sider-info.settings' />\r\n                                </div>\r\n                            </li>\r\n                            <li className='sub-li' onClick={props.processLogout}>\r\n                                <div className=\"icon\"  >\r\n                                    <i className=\"fas fa-sign-out-alt\"></i>\r\n                                </div>\r\n                                <div className='text'>\r\n                                    <FormattedMessage id='sider-info.logout' />\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        processLogout: () => dispatch(actions.processLogout())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Menu.scss'\r\nimport './SubMenu.scss'\r\nimport * as actions from \"../../../../store/actions\";\r\nimport { LANGUAGES } from '../../../../untils';\r\nimport { FormattedMessage } from 'react-intl';\r\nfunction SubMenu(props) {\r\n    return (\r\n        <>\r\n            <div className='menu'>\r\n                <ul className=\"main-menu\">\r\n                    <li className=\"title-menu\">\r\n                        <ul className='sub-menu'>\r\n                            <li className='sub-li active on'>\r\n                                <div className='icon'>\r\n                                    <i className=\"fas fa-home\"></i>\r\n                                </div>\r\n                                <div className='text'>\r\n                                    <FormattedMessage id='sider-info.home' />\r\n                                </div>\r\n                            </li>\r\n                            <li className='sub-li on'>\r\n                                <div className='icon'>\r\n                                    <i className=\"fab fa-discourse icon\"></i>\r\n                                </div>\r\n                                <div className='text'>\r\n                                    <FormattedMessage id='sider-info.discover' />\r\n                                </div>\r\n                            </li>\r\n                            <li className='sub-li on'>\r\n                                <div className='icon'>\r\n                                    <i className=\"fas fa-trophy\"></i>\r\n                                </div>\r\n                                <div className='text'>\r\n                                    <FormattedMessage id='sider-info.award' />\r\n                                </div>\r\n                            </li>\r\n                            <li className='sub-li on'>\r\n                                <div className='icon'>\r\n                                    <i className=\"fas fa-user\"></i>\r\n                                </div>\r\n                                <div className='text'>\r\n                                    <FormattedMessage id='sider-info.celeb' />\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                    {/* <li className=\"title-menu\">\r\n                        <FormattedMessage id='sider-info.library' />\r\n                        <ul className='sub-menu'>\r\n                            <li className='sub-li'>\r\n                                <div className=\"icon\"  >\r\n                                    <i className=\"fas fa-history\"></i>\r\n                                </div>\r\n                                <div className='text'>\r\n                                    <FormattedMessage id='sider-info.recent' />\r\n                                </div>\r\n                            </li>\r\n                            <li className='sub-li'>\r\n                                <div className=\"icon\"  >\r\n                                    <i className=\"fas fa-star\"></i>\r\n                                </div>\r\n                                <div className='text'>\r\n                                    <FormattedMessage id='sider-info.top-rated' />\r\n                                </div>\r\n                            </li>\r\n                            <li className='sub-li'>\r\n                                <div className=\"icon\"  >\r\n                                    <i className=\"fas fa-cloud-download-alt\"></i>\r\n                                </div>\r\n                                <div className='text'>\r\n                                    <FormattedMessage id='sider-info.download' />\r\n                                </div>\r\n                            </li>\r\n                            <li className='sub-li'>\r\n                                <div className=\"icon\"  >\r\n                                    <i className=\"fas fa-heart\"></i>\r\n                                </div>\r\n                                <div className='text'>\r\n                                    <FormattedMessage id='sider-info.playlist' />\r\n                                </div>\r\n                            </li>\r\n                            <li className='sub-li'>\r\n                                <div className=\"icon\"  >\r\n                                    <i className=\"fas fa-plus-square\"></i>\r\n                                </div>\r\n                                <div className='text'>\r\n                                    <FormattedMessage id='sider-info.watchlist' />\r\n                                </div>\r\n                            </li>\r\n                            <li className='sub-li'>\r\n                                <div className=\"icon\"  >\r\n                                    <i className=\"fas fa-check-square\"></i>\r\n                                </div>\r\n                                <div className='text'>\r\n                                    <FormattedMessage id='sider-info.completed' />\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </li>*/}\r\n                    <li className=\"title-menu\">\r\n                        {/* <FormattedMessage id='sider-info.general' /> */}\r\n                        <ul className='sub-menu'>\r\n                            <li className='sub-li on'>\r\n                                <div className=\"icon\"  >\r\n                                    <i className=\"fas fa-cog\"></i>\r\n                                </div>\r\n                                <div className='text'>\r\n                                    <FormattedMessage id='sider-info.settings' />\r\n                                </div>\r\n                            </li>\r\n                            <li className='sub-li on' onClick={props.processLogout}>\r\n                                <div className=\"icon\"  >\r\n                                    <i className=\"fas fa-sign-out-alt\"></i>\r\n                                </div>\r\n                                <div className='text'>\r\n                                    <FormattedMessage id='sider-info.logout' />\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        processLogout: () => dispatch(actions.processLogout())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SubMenu);","import React, { Component, Fragment, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './SideInfo.scss'\r\nimport * as actions from \"../../../store/actions\";\r\nimport { LANGUAGES } from '../../../untils';\r\nimport '../../Auth/About.scss'\r\nimport Menu from './Menu/Menu';\r\nimport SubMenu from './Menu/SubMenu';\r\nfunction SideInfo(props) {\r\n    const [menu, setMenu] = useState(false)\r\n    useEffect(() => {\r\n        console.log(menu);\r\n    }, [menu])\r\n    return (\r\n        <>\r\n            <div className='container-side-right'>\r\n                {props.side == false ?\r\n                    <SubMenu />\r\n                    :\r\n                    <Menu />\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n        side: state.app.side\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        processLogout: () => dispatch(actions.processLogout()),\r\n        changeLanguageAppRedux: (language) => dispatch(actions.changeLanguageApp(language))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideInfo);","import React, { Component, Fragment, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './contentSlider.scss'\r\nimport * as actions from \"../store/actions\";\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Slider from 'react-slick';\r\nimport StarRatings from 'react-star-ratings';\r\nimport { getMoviesFromDB } from '../services/movieService';\r\n// class contentSilder extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             listMovie: [],\r\n//             favor: false,\r\n//         }\r\n//     }\r\n//     componentDidMount() {\r\n//         this.fetchMovieList()\r\n//     }\r\n//     componentDidUpdate = async (prevProps, prevState, snapshot) => {\r\n//         if (this.props.language !== prevProps.language) {\r\n//             this.fetchMovieList()\r\n//         }\r\n//     }\r\n//     fetchMovieList = async () => {\r\n//         let movieList = await getMoviesFromDB(this.props.typeSort, this.props.page, this.props.language, this.props.year);\r\n//         this.setState({\r\n//             listMovie: movieList\r\n//         })\r\n//     }\r\n//     render() {\r\n//         var settings = {\r\n//             speed: 500,\r\n//             slidesToShow: 5,\r\n//             slidesToScroll: 5,\r\n//             arrows: false,\r\n//             responsive: [\r\n//                 {\r\n//                     breakpoint: 1680,\r\n//                     settings: {\r\n//                         slidesToShow: 4,\r\n//                         slidesToScroll: 4,\r\n//                     }\r\n//                 },\r\n//                 {\r\n//                     breakpoint: 1400,\r\n//                     settings: {\r\n//                         slidesToShow: 3,\r\n//                         slidesToScroll: 3,\r\n//                     }\r\n//                 },\r\n//                 {\r\n//                     breakpoint: 1040,\r\n//                     settings: {\r\n//                         slidesToShow: 2,\r\n//                         slidesToScroll: 2,\r\n//                     }\r\n//                 },\r\n//             ]\r\n//         };\r\n//         let { listMovie, favor } = this.state\r\n//         // console.log(this.state);\r\n//         return (\r\n//             <>\r\n//                 <div className='content-list-main'>\r\n//                     <div className='name-section-movie'><FormattedMessage id={this.props.idName} /></div>\r\n//                     <Slider {...settings}>\r\n//                         {listMovie && listMovie.length > 0 &&\r\n//                             listMovie.map((item, index) => {\r\n//                                 if (index < 10)\r\n//                                     return (\r\n//                                         <div>\r\n//                                             <div className='section-movie' style={{ backgroundImage: `url(https://image.tmdb.org/t/p/w500${item.poster_path})` }} key={index}>\r\n//                                                 <div className='content-up'>\r\n//                                                     <div className='name-film'>{item.title}</div>\r\n//                                                     <div className='vote-average'>\r\n//                                                         <StarRatings\r\n//                                                             rating={item.vote_average / 2}\r\n//                                                             starDimension=\"18px\"\r\n//                                                             starSpacing=\"2px\"\r\n//                                                             starRatedColor=\"#07b8a0\"\r\n//                                                         />\r\n//                                                     </div>\r\n//                                                 </div>\r\n//                                                 <div className='content-down'>\r\n//                                                     <div className='favorites-list'>\r\n//                                                         {favor === false ?\r\n//                                                             <i class=\"far fa-heart\"></i>\r\n//                                                             :\r\n//                                                             <i class=\"fas fa-heart\"></i>\r\n//                                                         }\r\n//                                                     </div>\r\n//                                                     <div className='watch-now' onClick={() => this.props.hanldeWatchMovie(item.id)}>\r\n//                                                         <FormattedMessage id='main.banner.btn-watch' />\r\n//                                                     </div>\r\n//                                                 </div>\r\n//                                             </div>\r\n\r\n//                                         </div>\r\n//                                     )\r\n//                             })\r\n//                         }\r\n//                     </Slider>\r\n//                 </div>\r\n//             </>\r\n//         )\r\n//     }\r\n// }\r\nfunction ContentSilder(props) {\r\n    const [listMovie, setListMovie] = useState([])\r\n    const [favor, setFavor] = useState(false)\r\n    var settings = {\r\n        speed: 500,\r\n        slidesToShow: 5,\r\n        slidesToScroll: 5,\r\n        arrows: false,\r\n        responsive: [\r\n            {\r\n                breakpoint: 1680,\r\n                settings: {\r\n                    slidesToShow: 4,\r\n                    slidesToScroll: 4,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 1400,\r\n                settings: {\r\n                    slidesToShow: 3,\r\n                    slidesToScroll: 3,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 1040,\r\n                settings: {\r\n                    slidesToShow: 2,\r\n                    slidesToScroll: 2,\r\n                }\r\n            },\r\n        ]\r\n    };\r\n    const fetchMovieList = async () => {\r\n        let movieList = await getMoviesFromDB(props.typeSort, props.page, props.language, props.year);\r\n        setListMovie(movieList)\r\n    }\r\n    useEffect(() => {\r\n        fetchMovieList()\r\n    }, []);\r\n    useEffect(() => {\r\n        fetchMovieList()\r\n    }, [props.language]);\r\n    return (\r\n        <>\r\n            <div className='content-list-main'>\r\n                <div className='name-section-movie'><FormattedMessage id={props.idName} /></div>\r\n                <Slider {...settings}>\r\n                    {listMovie && listMovie.length > 0 &&\r\n                        listMovie.map((item, index) => {\r\n                            if (index < 10)\r\n                                return (\r\n                                    <div>\r\n                                        <div className='section-movie' style={{ backgroundImage: `url(https://image.tmdb.org/t/p/w500${item.poster_path})` }} key={index}>\r\n                                            <div className='content-up'>\r\n                                                <div className='name-film'>{item.title}</div>\r\n                                                <div className='vote-average'>\r\n                                                    <StarRatings\r\n                                                        rating={item.vote_average / 2}\r\n                                                        starDimension=\"18px\"\r\n                                                        starSpacing=\"2px\"\r\n                                                        starRatedColor=\"#07b8a0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='content-down'>\r\n                                                <div className='favorites-list'>\r\n                                                    {favor === false ?\r\n                                                        <i class=\"far fa-heart\"></i>\r\n                                                        :\r\n                                                        <i class=\"fas fa-heart\"></i>\r\n                                                    }\r\n                                                </div>\r\n                                                <div className='watch-now' onClick={() => props.hanldeWatchMovie(item.id)}>\r\n                                                    <FormattedMessage id='main.banner.btn-watch' />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                )\r\n                        })\r\n                    }\r\n                </Slider>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchMovie: (typeSort, page, language, year) => dispatch(actions.fetchMovie(typeSort, page, language, year)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContentSilder);","import React, { Component, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './ListMain.scss'\r\nimport * as actions from \"../../../store/actions\";\r\nimport { ApiKey } from '../../../untils';\r\nimport StarRatings from 'react-star-ratings';\r\nimport Slider from 'react-slick';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { withRouter } from 'react-router';\r\nimport ContentSlider from '../../../components/contentSlider';\r\nimport { getMoviesFromDB } from '../../../services/movieService';\r\nfunction ListMain(props) {\r\n    var settings_banner = {\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        autoplay: false,\r\n        autoplaySpeed: 10000,\r\n        dots: false,\r\n    };\r\n    const [user, setUser] = useState({\r\n        userName: '',\r\n        password: ''\r\n    })\r\n    const [errMessage, setErrMessage] = useState('')\r\n    const [listMovie, setListMovie] = useState([])\r\n    const [favor, setFavor] = useState(false)\r\n    const fetchMovieList = async () => {\r\n        let movie = await getMoviesFromDB('popularity.desc', 1, props.language, 2024)\r\n        setListMovie(movie)\r\n    }\r\n    useEffect(() => {\r\n        fetchMovieList()\r\n    }, [])\r\n    useEffect(() => {\r\n        fetchMovieList()\r\n    }, [props.language])\r\n    const hanldeWatchMovie = (id) => {\r\n        // alert('Movie id: ' + id)\r\n        props.history.push(`/dMovie/${id}`)\r\n    }\r\n    return (\r\n        <>\r\n            <div className='container-list-main'>\r\n                <div className='header-list-main'>\r\n\r\n                </div>\r\n                <div className='banner-list-main'>\r\n                    <Slider {...settings_banner}>\r\n                        {listMovie && listMovie.length > 0 &&\r\n                            listMovie.map((item, index) => {\r\n                                if (index < 3)\r\n                                    return (\r\n                                        <div>\r\n                                            <div className='banner-movie' style={{ backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})` }} key={index}>\r\n                                                <div className='name-film'>{item.title}</div>\r\n                                                <div className='vote-average'>\r\n                                                    <StarRatings\r\n                                                        rating={item.vote_average / 2}\r\n                                                        starDimension=\"36px\"\r\n                                                        starSpacing=\"2px\"\r\n                                                        starRatedColor=\"#07b8a0\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className='button-watch'>\r\n                                                    <div className='content-left'>\r\n                                                        <div className='watch-list'>\r\n                                                            <i className=\"fas fa-plus\"></i>\r\n                                                            <FormattedMessage id='main.banner.btn-watchlist' />\r\n                                                        </div>\r\n                                                        <div className='favorites-list' onClick={() => setFavor(!favor)}>\r\n                                                            {favor === false ?\r\n                                                                <i class=\"far fa-heart\"></i>\r\n                                                                :\r\n                                                                <i class=\"fas fa-heart\"></i>\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='watch' onClick={() => hanldeWatchMovie(item.id)}>\r\n                                                        <FormattedMessage id='main.banner.btn-watch' />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                            })\r\n                        }\r\n                    </Slider>\r\n                </div>\r\n                <ContentSlider\r\n                    idName='main.content.popular-movies'\r\n                    typeSort='popularity.desc'\r\n                    page='1'\r\n                    year='2024'\r\n                    hanldeWatchMovie={hanldeWatchMovie}\r\n                />\r\n                <ContentSlider\r\n                    idName='main.content.toprated-movies'\r\n                    typeSort='vote_average.desc'\r\n                    page='1'\r\n                    year='2024'\r\n                    hanldeWatchMovie={hanldeWatchMovie}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n        movieList: state.movie.movieList,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        processLogout: () => dispatch(actions.processLogout()),\r\n        fetchMovie: (typeSort, page, language, year) => dispatch(actions.fetchMovie(typeSort, page, language, year)),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ListMain));","import React, { Component, Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './cslCont.scss'\r\nimport * as actions from \"../../../../store/actions\";\r\nimport TimeRangeSlider from 'react-time-range-slider';\r\nimport { LANGUAGES } from '../../../../untils';\r\nimport { FormattedMessage } from 'react-intl';\r\nfunction CslCont() {\r\n    const [dataContMovie, setDataContMovie] = useState([\r\n        { id: 1, nMovie: \"Hành tinh cát: Phần 2\", timeCont: \"01:23\", tMovie: \"02:34\" },\r\n        { id: 2, nMovie: \"abc 2\", timeCont: \"01:23\", tMovie: \"01:54\" },\r\n        { id: 3, nMovie: \"abc 3\", timeCont: \"01:23\", tMovie: \"02:04\" }\r\n    ])\r\n    const [position, setPosition] = useState(1)\r\n    const value = {\r\n        start: \"00:00\",\r\n        end: \"23:59\"\r\n    }\r\n    return (\r\n        <>\r\n            <div className='csl-cont'>\r\n                <div className='title-body'>\r\n                    <div className='p1'>\r\n                        <FormattedMessage id='sider-watch.continue' />\r\n                        <i\r\n                            class={position && position === 1 ?\r\n                                \"fas fa-chevron-left disable\"\r\n                                :\r\n                                \"fas fa-chevron-left \"\r\n                            }\r\n                            onClick={() => setPosition(position - 1)}\r\n                        >\r\n                        </i>\r\n                        <i class={position && position - dataContMovie.length === 0 ?\r\n                            \"fas fa-chevron-right disable\"\r\n                            :\r\n                            \"fas fa-chevron-right \"\r\n                        }\r\n                            onClick={() => setPosition(position + 1)}\r\n                        >\r\n                        </i>\r\n                    </div>\r\n                    <div className='p2'>\r\n                        <FormattedMessage id='sider-watch.see-more' />\r\n                        <i class=\"far fa-eye\"></i>\r\n                    </div>\r\n                </div>\r\n                <div className='cont-detail' style={{ left: `${-200 * position + 200}px` }}>\r\n                    {dataContMovie && dataContMovie.length > 0 &&\r\n                        dataContMovie.map((item, index) => {\r\n                            let time = {\r\n                                start: \"00:00\",\r\n                                end: item.timeCont\r\n                            }\r\n                            if (index < 10) {\r\n                                return (\r\n                                    <>\r\n                                        <div className='details-m-cont' >\r\n                                            <div className='title-m'>\r\n                                                <div className='img-movie'\r\n                                                    style={{ backgroundImage: 'url(https://image.tmdb.org/t/p/w500/8QdnKQyZDlN6rBSrfU1V5PctfUu.jpg)' }}\r\n                                                >\r\n                                                </div>\r\n                                                <div className='name-movie'>\r\n                                                    <div className='name'>\r\n                                                        {item.nMovie}\r\n                                                    </div>\r\n                                                    <TimeRangeSlider\r\n                                                        disabled={false}\r\n                                                        maxValue={item.tMovie}\r\n                                                        minValue={\"00:00\"}\r\n                                                        step={15}\r\n                                                        value={time}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='btn-list'>\r\n                                                <div className='btn-drop'><FormattedMessage id='sider-watch.drop' /></div>\r\n                                                <div className='btn-watch'><FormattedMessage id='sider-watch.watch' /></div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </>\r\n                                )\r\n                            }\r\n                        })\r\n                    }\r\n                </div>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        processLogout: () => dispatch(actions.processLogout()),\r\n        changeLanguageAppRedux: (language) => dispatch(actions.changeLanguageApp(language))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CslCont);","import React, { Component, Fragment, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './cslTopRated.scss'\r\nimport * as actions from \"../../../../store/actions\";\r\nimport StarRatings from 'react-star-ratings';\r\nimport { LANGUAGES } from '../../../../untils';\r\nimport { getMoviesFromDB } from '../../../../services/movieService';\r\nimport { withRouter } from 'react-router';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nfunction CslTopRated(props) {\r\n    const [dataTopRatedMovie, setDataTopRatedMovie] = useState([])\r\n    const [position, setPosition] = useState(1)\r\n    const fetchMovieList = async () => {\r\n        let movieList = await getMoviesFromDB(props.typeSort, props.page, props.language, props.year);\r\n        setDataTopRatedMovie(movieList)\r\n    }\r\n    useEffect(() => {\r\n        fetchMovieList()\r\n    }, [])\r\n    useEffect(() => {\r\n        fetchMovieList()\r\n    }, [props.language]);\r\n    return (\r\n        <>\r\n            <div className='csl-top-rated'>\r\n                <div className='title-body'>\r\n                    <div className='p1'>\r\n                        <FormattedMessage id='sider-watch.top-rated' />\r\n                        <i\r\n                            class={position && position === 1 ?\r\n                                \"fas fa-chevron-left disable\"\r\n                                :\r\n                                \"fas fa-chevron-left \"\r\n                            }\r\n                            onClick={() => setPosition(position - 1)}\r\n                        >\r\n                        </i>\r\n                        <i class={position && position * 2 - dataTopRatedMovie.length === 0 ?\r\n                            \"fas fa-chevron-right disable\"\r\n                            :\r\n                            \"fas fa-chevron-right \"\r\n                        }\r\n                            onClick={() => setPosition(position + 1)}\r\n                        >\r\n                        </i>\r\n                    </div>\r\n                    <div className='p2'>\r\n                        <FormattedMessage id='sider-watch.see-more' />\r\n                        <i className=\"far fa-eye\"></i>\r\n                    </div>\r\n                </div>\r\n                <div className='cont-detail' style={{ left: `${-200 * position + 200}px` }}>\r\n                    {dataTopRatedMovie && dataTopRatedMovie.length > 0 &&\r\n                        dataTopRatedMovie.map((item, index) => {\r\n                            if (index < 10) {\r\n                                return (\r\n                                    <>\r\n                                        <div className='details-m-cont' style={{ backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})` }}>\r\n                                            <div className='title-m'>\r\n                                                <div className='name-movie'>\r\n                                                    {item.title}\r\n                                                </div>\r\n                                                <StarRatings\r\n                                                    rating={5}\r\n                                                    starDimension=\"16px\"\r\n                                                    starSpacing=\"2px\"\r\n                                                    starRatedColor=\"#07b8a0\"\r\n                                                />\r\n                                            </div>\r\n                                            <div className='btn-list'>\r\n                                                <div className='btn-drop'><i className=\"fas fa-plus\"></i></div>\r\n                                                <div className='btn-watch' onClick={() => this.props.hanldeWatchMovie(item.id)}><FormattedMessage id='sider-watch.watch' /></div>\r\n                                            </div>\r\n                                        </div >\r\n                                    </>\r\n                                )\r\n                            }\r\n                        })\r\n                    }\r\n                </div>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        processLogout: () => dispatch(actions.processLogout()),\r\n        changeLanguageAppRedux: (language) => dispatch(actions.changeLanguageApp(language))\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CslTopRated));","import React, { Component, Fragment, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './cslGenres.scss'\r\nimport * as actions from \"../../../../store/actions\";\r\nimport { LANGUAGES } from '../../../../untils';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nfunction CslGenres(props) {\r\n    // const [dataGenres, setDataGenres] = useState([])\r\n    const [position, setPosition] = useState(1);\r\n    const genresMovie = props.genresMovie.genres;\r\n    const fetchGenresMovie = () => {\r\n        props.fetchGenresMovie(props.language);\r\n    }\r\n    useEffect(() => {\r\n        fetchGenresMovie()\r\n    }, []);\r\n    useEffect(() => {\r\n        fetchGenresMovie()\r\n    }, [props.language]);\r\n    return (\r\n        <>\r\n            <div className='csl-genres'>\r\n                <div className='title-body'>\r\n                    <div className='p1'>\r\n                        <FormattedMessage id='sider-watch.genres' />\r\n                        <i\r\n                            class={position && position === 1 ?\r\n                                \"fas fa-chevron-left disable\"\r\n                                :\r\n                                \"fas fa-chevron-left \"\r\n                            }\r\n                            onClick={() => setPosition(position - 1)}\r\n                        >\r\n                        </i>\r\n                        <i class={position && position - 9 === 0 ?\r\n                            \"fas fa-chevron-right disable\"\r\n                            :\r\n                            \"fas fa-chevron-right \"\r\n                        }\r\n                            onClick={() => setPosition(position + 1)}\r\n                        >\r\n                        </i>\r\n                    </div>\r\n                    <div className='p2'>\r\n                        <FormattedMessage id='sider-watch.see-more' />\r\n                        <i className=\"far fa-eye\"></i>\r\n                    </div>\r\n                </div>\r\n                <div className='genres-detail' style={{ top: '40px', left: `${-200 * position + 200}px` }}>\r\n                    {genresMovie && genresMovie.length > 0 &&\r\n                        genresMovie.slice(0, 9).map((item, index) => {\r\n                            return (\r\n                                <>\r\n                                    <div className='details-genres' style={{ backgroundImage: 'url(https://image.tmdb.org/t/p/original/xRd1eJIDe7JHO5u4gtEYwGn5wtf.jpg)' }}>\r\n                                        <div className='name-genres'>\r\n                                            {item.name}\r\n                                        </div>\r\n                                    </div >\r\n                                </>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className='genres-detail' style={{ top: '170px', left: `${-200 * position + 200}px` }}>\r\n                    {genresMovie && genresMovie.length > 0 &&\r\n                        genresMovie.slice(10, 18).map((item, index) => {\r\n                            return (\r\n                                <>\r\n                                    <div className='details-genres' style={{ backgroundImage: 'url(https://image.tmdb.org/t/p/original/xRd1eJIDe7JHO5u4gtEYwGn5wtf.jpg)' }}>\r\n                                        <div className='name-genres'>\r\n                                            {item.name}\r\n                                        </div>\r\n                                    </div >\r\n                                </>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n        genresMovie: state.movie.genresMovie\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchGenresMovie: (language) => dispatch(actions.fetchGenresMovie(language))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CslGenres);","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './bodySW.scss'\r\nimport * as actions from \"../../../../store/actions\";\r\nimport TimeRangeSlider from 'react-time-range-slider';\r\nimport { LANGUAGES } from '../../../../untils';\r\nimport CslCont from './cslCont';\r\nimport CslTopRated from './cslTopRated';\r\nimport CslGenres from './cslGenres';\r\nimport { withRouter } from 'react-router';\r\nfunction BodySW(props) {\r\n    const hanldeWatchMovie = (id) => {\r\n        // alert('Movie id: ' + id)\r\n        props.history.push(`/dMovie/${id}`)\r\n    }\r\n    return (\r\n        <>\r\n            <CslCont />\r\n            <CslTopRated\r\n                idName='main.content.popular-movies'\r\n                typeSort='popularity.desc'\r\n                page='1'\r\n                year='2024'\r\n                hanldeWatchMovie={hanldeWatchMovie}\r\n            />\r\n            <CslGenres />\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        processLogout: () => dispatch(actions.processLogout()),\r\n        changeLanguageAppRedux: (language) => dispatch(actions.changeLanguageApp(language))\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(BodySW));","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './SideWatch.scss'\r\nimport * as actions from \"../../../store/actions\";\r\nimport HeaderSW from './Header/HeaderSW';\r\nimport BodySW from './Body/bodySW';\r\n\r\nfunction SideWatch(props) {\r\n    return (\r\n        <>\r\n            <div className='container-side-left'>\r\n                <div className='csl-body'>\r\n                    <BodySW />\r\n                </div>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        processLogout: () => dispatch(actions.processLogout()),\r\n        changeLanguageAppRedux: (language) => dispatch(actions.changeLanguageApp(language))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideWatch);","import React, { Component, Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Main.scss'\r\nimport * as actions from \"../../../store/actions\";\r\nimport SideInfo from '../SideInfo/SideInfo';\r\nimport ListMain from '../ListMain/ListMain';\r\nimport SideWatch from '../SideWatch/SideWatch';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { LANGUAGES } from '../../../untils';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport HeaderSW from '../SideWatch/Header/HeaderSW.js';\r\nimport HeaderMoviePage from '../../Auth/Header/HeaderMoviePage.js';\r\nfunction Main(props) {\r\n    const [header, setHeader] = useState('header-main')\r\n    const styleOn = {\r\n        width: '5%'\r\n    }\r\n    const styleOff = {\r\n        width: '10%'\r\n    }\r\n    const handleScroll = () => {\r\n        if (window.scrollY > 80) {\r\n            setHeader('header-main bg-solid')\r\n        } else {\r\n            setHeader('header-main')\r\n        }\r\n    }\r\n    useState(() => {\r\n        window.addEventListener('scroll', handleScroll, true)\r\n        return () => { window.removeEventListener('scroll', handleScroll, true) }\r\n    }, [])\r\n    const { side } = props\r\n    return (\r\n        <>\r\n            <div className='container-main bg-main'>\r\n                <HeaderMoviePage\r\n                />\r\n                <div className='body-main'>\r\n                    <div className={side == false ? 'side1 bg-side' : 'side1 bg-side on-side'} >\r\n                        <SideInfo />\r\n                    </div>\r\n                    <div className={side == false ? 'content-main bg-main' : 'content-main bg-main on-side-main'}>\r\n                        <ListMain />\r\n                    </div>\r\n                    <div className='side2 bg-side'>\r\n                        <SideWatch />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n        side: state.app.side\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        processLogout: () => dispatch(actions.processLogout()),\r\n        changeLanguageAppRedux: (language) => dispatch(actions.changeLanguageApp(language)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","import { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { ConnectedRouter as Router } from 'connected-react-router';\nimport { history } from '../redux'\nimport { ToastContainer } from 'react-toastify';\nimport { path } from '../untils'\nimport Scrollbars from 'react-custom-scrollbars';\nimport { userIsAuthenticated, userIsNotAuthenticated } from '../hoc/authentication';\nimport Login from '../containers/Auth/Login.js'\nimport Home from '../containers/HomePage/Home.js'\nimport About from './Auth/About.js';\nimport './App.scss'\nimport dMoviePage from './Movie/dMoviePage.js';\nimport watchMoviePage from './Movie/watchMoviePage.js';\nimport Main from './mainWatch/Main/Main.js';\nfunction App(props) {\n  const handlePersistorState = () => {\n    const { persistor } = props;\n    let { bootstrapped } = persistor.getState();\n    if (bootstrapped) {\n      if (this.props.onBeforeLift) {\n        Promise.resolve(this.props.onBeforeLift())\n          .then(() => this.setState({ bootstrapped: true }))\n          .catch(() => this.setState({ bootstrapped: true }));\n      } else {\n        this.setState({ bootstrapped: true });\n      }\n    }\n  };\n  useEffect(() => {\n    // handlePersistorState();\n  }, []);\n  // console.log('check props', props);\n  return (\n    <Fragment>\n      <Router history={history}>\n        <div className=\"main-container\">\n          <div className=\"content-container\">\n            {/* <Scrollbars style={{ height: '100vh', with: '100%' }}> */}\n            <Switch>\n              <Route path={path.HOME} exact component={(Home)} />\n              <Route path={path.LOGIN} component={userIsNotAuthenticated(Login)} />\n              <Route path={path.HOMEPAGE} component={userIsAuthenticated(Main)} />\n              <Route path={path.ABOUT} component={userIsNotAuthenticated(About)} />\n              <Route path={path.DETAILMOVIE} component={userIsAuthenticated(dMoviePage)} />\n              <Route path={path.WATCH} component={userIsAuthenticated(watchMoviePage)} />\n            </Switch>\n            {/* </Scrollbars> */}\n          </div>\n\n          <ToastContainer\n            position=\"bottom-right\"\n            autoClose={5000}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n            theme=\"light\"\n          />\n        </div>\n      </Router>\n    </Fragment>\n  )\n}\nconst mapStateToProps = state => {\n  return {\n    started: state.app.started,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { IntlProvider } from \"react-intl\";\r\n\r\nimport '@formatjs/intl-pluralrules/polyfill';\r\nimport '@formatjs/intl-pluralrules/locale-data/en';\r\nimport '@formatjs/intl-pluralrules/locale-data/vi';\r\n\r\nimport '@formatjs/intl-relativetimeformat/polyfill';\r\nimport '@formatjs/intl-relativetimeformat/locale-data/en'\r\nimport '@formatjs/intl-relativetimeformat/locale-data/vi';\r\n\r\nimport { LanguageUtils } from '../untils'\r\n\r\nconst messages = LanguageUtils.getFlattenedMessages();\r\n\r\nclass IntlProviderWrapper extends Component {\r\n\r\n    render() {\r\n        const { children, language } = this.props;\r\n        return (\r\n            <IntlProvider\r\n                locale={language}\r\n                messages={messages[language]}\r\n                defaultLocale=\"vi\">\r\n                {children}\r\n            </IntlProvider>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(IntlProviderWrapper);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/styles.scss';\n\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport IntlProviderWrapper from \"./hoc/IntlProviderWrapper\";\n\nimport { Provider } from 'react-redux';\nimport reduxStore, { persistor } from './redux'\n\nconst renderApp = () => {\n  ReactDOM.render(\n    <Provider store={reduxStore}>\n      <IntlProviderWrapper>\n        <App persistor={persistor} />\n      </IntlProviderWrapper>\n    </Provider>,\n    document.getElementById('root')\n  )\n}\n\nrenderApp();\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}